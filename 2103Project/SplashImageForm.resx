<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAgEAAAAAAAD/4QA+RXhpZgAATU0AKgAAAAgAAYdpAAQAAAABAAAAGgAAAAAAAZKG
        AAcAAAAKAAAALAAAAABVTklDT0RFAAAq//4ABCoA/+IL+ElDQ19QUk9GSUxFAAEBAAAL6AAAAAACAAAA
        bW50clJHQiBYWVogB9kAAwAbABUAJAAfYWNzcAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAPbW
        AAEAAAAA0y0AAAAAKfg93q/yVa54QvrkyoM5DQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQ
        ZGVzYwAAAUQAAAB5YlhZWgAAAcAAAAAUYlRSQwAAAdQAAAgMZG1kZAAACeAAAACIZ1hZWgAACmgAAAAU
        Z1RSQwAAAdQAAAgMbHVtaQAACnwAAAAUbWVhcwAACpAAAAAkYmtwdAAACrQAAAAUclhZWgAACsgAAAAU
        clRSQwAAAdQAAAgMdGVjaAAACtwAAAAMdnVlZAAACugAAACHd3RwdAAAC3AAAAAUY3BydAAAC4QAAAA3
        Y2hhZAAAC7wAAAAsZGVzYwAAAAAAAAAfc1JHQiBJRUM2MTk2Ni0yLTEgYmxhY2sgc2NhbGVkAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAFhZWiAAAAAAAAAkoAAAD4QAALbPY3VydgAAAAAAAAQAAAAABQAKAA8AFAAZ
        AB4AIwAoAC0AMgA3ADsAQABFAEoATwBUAFkAXgBjAGgAbQByAHcAfACBAIYAiwCQAJUAmgCfAKQAqQCu
        ALIAtwC8AMEAxgDLANAA1QDbAOAA5QDrAPAA9gD7AQEBBwENARMBGQEfASUBKwEyATgBPgFFAUwBUgFZ
        AWABZwFuAXUBfAGDAYsBkgGaAaEBqQGxAbkBwQHJAdEB2QHhAekB8gH6AgMCDAIUAh0CJgIvAjgCQQJL
        AlQCXQJnAnECegKEAo4CmAKiAqwCtgLBAssC1QLgAusC9QMAAwsDFgMhAy0DOANDA08DWgNmA3IDfgOK
        A5YDogOuA7oDxwPTA+AD7AP5BAYEEwQgBC0EOwRIBFUEYwRxBH4EjASaBKgEtgTEBNME4QTwBP4FDQUc
        BSsFOgVJBVgFZwV3BYYFlgWmBbUFxQXVBeUF9gYGBhYGJwY3BkgGWQZqBnsGjAadBq8GwAbRBuMG9QcH
        BxkHKwc9B08HYQd0B4YHmQesB78H0gflB/gICwgfCDIIRghaCG4IggiWCKoIvgjSCOcI+wkQCSUJOglP
        CWQJeQmPCaQJugnPCeUJ+woRCicKPQpUCmoKgQqYCq4KxQrcCvMLCwsiCzkLUQtpC4ALmAuwC8gL4Qv5
        DBIMKgxDDFwMdQyODKcMwAzZDPMNDQ0mDUANWg10DY4NqQ3DDd4N+A4TDi4OSQ5kDn8Omw62DtIO7g8J
        DyUPQQ9eD3oPlg+zD88P7BAJECYQQxBhEH4QmxC5ENcQ9RETETERTxFtEYwRqhHJEegSBxImEkUSZBKE
        EqMSwxLjEwMTIxNDE2MTgxOkE8UT5RQGFCcUSRRqFIsUrRTOFPAVEhU0FVYVeBWbFb0V4BYDFiYWSRZs
        Fo8WshbWFvoXHRdBF2UXiReuF9IX9xgbGEAYZRiKGK8Y1Rj6GSAZRRlrGZEZtxndGgQaKhpRGncanhrF
        GuwbFBs7G2MbihuyG9ocAhwqHFIcexyjHMwc9R0eHUcdcB2ZHcMd7B4WHkAeah6UHr4e6R8THz4faR+U
        H78f6iAVIEEgbCCYIMQg8CEcIUghdSGhIc4h+yInIlUigiKvIt0jCiM4I2YjlCPCI/AkHyRNJHwkqyTa
        JQklOCVoJZclxyX3JicmVyaHJrcm6CcYJ0kneierJ9woDSg/KHEooijUKQYpOClrKZ0p0CoCKjUqaCqb
        Ks8rAis2K2krnSvRLAUsOSxuLKIs1y0MLUEtdi2rLeEuFi5MLoIuty7uLyQvWi+RL8cv/jA1MGwwpDDb
        MRIxSjGCMbox8jIqMmMymzLUMw0zRjN/M7gz8TQrNGU0njTYNRM1TTWHNcI1/TY3NnI2rjbpNyQ3YDec
        N9c4FDhQOIw4yDkFOUI5fzm8Ofk6Njp0OrI67zstO2s7qjvoPCc8ZTykPOM9Ij1hPaE94D4gPmA+oD7g
        PyE/YT+iP+JAI0BkQKZA50EpQWpBrEHuQjBCckK1QvdDOkN9Q8BEA0RHRIpEzkUSRVVFmkXeRiJGZ0ar
        RvBHNUd7R8BIBUhLSJFI10kdSWNJqUnwSjdKfUrESwxLU0uaS+JMKkxyTLpNAk1KTZNN3E4lTm5Ot08A
        T0lPk0/dUCdQcVC7UQZRUFGbUeZSMVJ8UsdTE1NfU6pT9lRCVI9U21UoVXVVwlYPVlxWqVb3V0RXklfg
        WC9YfVjLWRpZaVm4WgdaVlqmWvVbRVuVW+VcNVyGXNZdJ114XcleGl5sXr1fD19hX7NgBWBXYKpg/GFP
        YaJh9WJJYpxi8GNDY5dj62RAZJRk6WU9ZZJl52Y9ZpJm6Gc9Z5Nn6Wg/aJZo7GlDaZpp8WpIap9q92tP
        a6dr/2xXbK9tCG1gbbluEm5rbsRvHm94b9FwK3CGcOBxOnGVcfByS3KmcwFzXXO4dBR0cHTMdSh1hXXh
        dj52m3b4d1Z3s3gReG54zHkqeYl553pGeqV7BHtje8J8IXyBfOF9QX2hfgF+Yn7CfyN/hH/lgEeAqIEK
        gWuBzYIwgpKC9INXg7qEHYSAhOOFR4Wrhg6GcobXhzuHn4gEiGmIzokziZmJ/opkisqLMIuWi/yMY4zK
        jTGNmI3/jmaOzo82j56QBpBukNaRP5GokhGSepLjk02TtpQglIqU9JVflcmWNJaflwqXdZfgmEyYuJkk
        mZCZ/JpomtWbQpuvnByciZz3nWSd0p5Anq6fHZ+Ln/qgaaDYoUehtqImopajBqN2o+akVqTHpTilqaYa
        poum/adup+CoUqjEqTepqaocqo+rAqt1q+msXKzQrUStuK4trqGvFq+LsACwdbDqsWCx1rJLssKzOLOu
        tCW0nLUTtYq2AbZ5tvC3aLfguFm40blKucK6O7q1uy67p7whvJu9Fb2Pvgq+hL7/v3q/9cBwwOzBZ8Hj
        wl/C28NYw9TEUcTOxUvFyMZGxsPHQce/yD3IvMk6ybnKOMq3yzbLtsw1zLXNNc21zjbOts83z7jQOdC6
        0TzRvtI/0sHTRNPG1EnUy9VO1dHWVdbY11zX4Nhk2OjZbNnx2nba+9uA3AXcit0Q3ZbeHN6i3ynfr+A2
        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
        XKtcaEf5y1SvQAGPZ/5H/9k=
</value>
  </data>
</root>